
LCDtest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000bf6  00000c8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bf6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  0080012c  0080012c  00000cb6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cb6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b93  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097f  00000000  00000000  0000194b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e3  00000000  00000000  000022ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  000027b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000474  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000027b  00000000  00000000  00002d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002fb7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ef       	ldi	r30, 0xF6	; 246
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 32       	cpi	r26, 0x2C	; 44
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e2       	ldi	r26, 0x2C	; 44
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 35       	cpi	r26, 0x54	; 84
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	82 d0       	rcall	.+260    	; 0x1c8 <main>
  c4:	96 c5       	rjmp	.+2860   	; 0xbf2 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <tx0Char>:
}

// UART0 을 이용한 출력
void tx0Char(char message)
{
	while (((UCSR0A>>UDRE0)&0x01) == 0) ;  // UDRE, data register empty        
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <tx0Char>
    UDR0 = message;
  cc:	8c b9       	out	0x0c, r24	; 12
  ce:	08 95       	ret

000000d0 <tx1Char>:
}

// UART1 을 이용한 출력
void tx1Char(char message)
{
	while (((UCSR1A>>UDRE1)&0x01) == 0) ;  // UDRE, data register empty        
  d0:	eb e9       	ldi	r30, 0x9B	; 155
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	90 81       	ld	r25, Z
  d6:	95 ff       	sbrs	r25, 5
  d8:	fd cf       	rjmp	.-6      	; 0xd4 <tx1Char+0x4>
    UDR1 = message;
  da:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
  de:	08 95       	ret

000000e0 <Putchar>:
void tx1Char(char message);



static int Putchar(char c, FILE *stream)
{
  e0:	cf 93       	push	r28
  e2:	c8 2f       	mov	r28, r24
	tx0Char(c);
  e4:	f1 df       	rcall	.-30     	; 0xc8 <tx0Char>
    tx1Char(c);
  e6:	8c 2f       	mov	r24, r28
  e8:	f3 df       	rcall	.-26     	; 0xd0 <tx1Char>
	return 0;
      
}
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <port_init>:
}


void port_init(void)
{
 PORTA = 0x00;
  f2:	1b ba       	out	0x1b, r1	; 27
 DDRA  = 0x00;
  f4:	1a ba       	out	0x1a, r1	; 26
 PORTB = 0x00;
  f6:	18 ba       	out	0x18, r1	; 24
 DDRB  = 0x00;
  f8:	17 ba       	out	0x17, r1	; 23
 PORTC = 0x00; //m103 output only
  fa:	15 ba       	out	0x15, r1	; 21
 DDRC  = 0x00;
  fc:	14 ba       	out	0x14, r1	; 20
 PORTD = 0x00;
  fe:	12 ba       	out	0x12, r1	; 18
 DDRD  = 0x00;
 100:	11 ba       	out	0x11, r1	; 17
 PORTE = 0x00;
 102:	13 b8       	out	0x03, r1	; 3
 DDRE  = 0x00;
 104:	12 b8       	out	0x02, r1	; 2
 PORTF = 0x00;
 106:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 DDRF  = 0x00;
 10a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 PORTG = 0x00;
 10e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
 DDRG  = 0x00;
 112:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 116:	08 95       	ret

00000118 <uart0_init>:
// actual: baud rate:9615 (0.2%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
 UCSR0B = 0x00; //disable while setting baud rate
 118:	1a b8       	out	0x0a, r1	; 10
 UCSR0A = 0x00;
 11a:	1b b8       	out	0x0b, r1	; 11
 UCSR0C = 0x06;
 11c:	86 e0       	ldi	r24, 0x06	; 6
 11e:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 UBRR0L = 0x67; //set baud rate lo
 122:	87 e6       	ldi	r24, 0x67	; 103
 124:	89 b9       	out	0x09, r24	; 9
 UBRR0H = 0x00; //set baud rate hi
 126:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 UCSR0B = 0x18;
 12a:	88 e1       	ldi	r24, 0x18	; 24
 12c:	8a b9       	out	0x0a, r24	; 10
 12e:	08 95       	ret

00000130 <uart1_init>:
// actual baud rate:9615 (0.2%)
// char size: 8 bit
// parity: Disabled
void uart1_init(void)
{
 UCSR1B = 0x00; //disable while setting baud rate
 130:	ea e9       	ldi	r30, 0x9A	; 154
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	10 82       	st	Z, r1
 UCSR1A = 0x00;
 136:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 UCSR1C = 0x06;
 13a:	86 e0       	ldi	r24, 0x06	; 6
 13c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
// UBRR1L = 0x2F; //set baud rate lo 7.3728 MHz
// UBRR1L = 0x47; //set baud rate lo 11.0592 Mhz
 UBRR1L = 0x67; //set baud rate lo 16Mhz
 140:	87 e6       	ldi	r24, 0x67	; 103
 142:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 UBRR1H = 0x00; //set baud rate hi
 146:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 UCSR1B = 0x18;
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	80 83       	st	Z, r24
 14e:	08 95       	ret

00000150 <init_devices>:

//call this routine to initialize all peripherals
void init_devices(void)
{
 //stop errant interrupts until set up
 cli(); //disable all interrupts
 150:	f8 94       	cli
 XMCRA = 0x00; //external memory
 152:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 XMCRB = 0x00; //external memory
 156:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 port_init();
 15a:	cb df       	rcall	.-106    	; 0xf2 <port_init>
 uart0_init();
 15c:	dd df       	rcall	.-70     	; 0x118 <uart0_init>
 uart1_init();
 15e:	e8 df       	rcall	.-48     	; 0x130 <uart1_init>
 160:	60 e0       	ldi	r22, 0x00	; 0
 fdevopen(Putchar,0);
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	80 e7       	ldi	r24, 0x70	; 112
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	ba d0       	rcall	.+372    	; 0x2de <fdevopen>
 16a:	15 be       	out	0x35, r1	; 53

 MCUCR = 0x00;
 16c:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 EICRA = 0x00; //extended ext ints
 170:	1a be       	out	0x3a, r1	; 58
 EICRB = 0x00; //extended ext ints
 172:	19 be       	out	0x39, r1	; 57
 EIMSK = 0x00;
 174:	17 be       	out	0x37, r1	; 55
 TIMSK = 0x00; //timer interrupt sources
 176:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
 ETIMSK = 0x00; //extended timer interrupt sources
 17a:	78 94       	sei

 sei(); //re-enable interrupts
 17c:	08 95       	ret

0000017e <delay_us>:
 17e:	18 16       	cp	r1, r24

// 시간 지연 함수
void delay_us(int time_us)
{
   register int i;
   for(i=0; i<time_us; i++){   // 4 cycle +
 180:	19 06       	cpc	r1, r25
 182:	5c f4       	brge	.+22     	; 0x19a <delay_us+0x1c>
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	30 e0       	ldi	r19, 0x00	; 0
      asm("PUSH   R0");        // 2 cycle +
 188:	0f 92       	push	r0
      asm("POP    R0");        // 2 cycle +
 18a:	0f 90       	pop	r0
      asm("PUSH   R0");        // 2 cycle +
 18c:	0f 92       	push	r0
      asm("POP    R0");        // 2 cycle +
 18e:	0f 90       	pop	r0

// 시간 지연 함수
void delay_us(int time_us)
{
   register int i;
   for(i=0; i<time_us; i++){   // 4 cycle +
 190:	2f 5f       	subi	r18, 0xFF	; 255
 192:	3f 4f       	sbci	r19, 0xFF	; 255
 194:	82 17       	cp	r24, r18
 196:	93 07       	cpc	r25, r19
 198:	b9 f7       	brne	.-18     	; 0x188 <delay_us+0xa>
 19a:	08 95       	ret

0000019c <delay_ms>:
      asm("POP    R0");        // 2 cycle   = 16 cycle = 1us for 16MHz*/
   }
}

void delay_ms(int time_ms)
{
 19c:	0f 93       	push	r16
 19e:	1f 93       	push	r17
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
   register int i;
   for(i=0;i<time_ms;i++) delay_us(1000);
 1a4:	18 16       	cp	r1, r24
 1a6:	19 06       	cpc	r1, r25
 1a8:	54 f4       	brge	.+20     	; 0x1be <delay_ms+0x22>
 1aa:	8c 01       	movw	r16, r24
 1ac:	c0 e0       	ldi	r28, 0x00	; 0
 1ae:	d0 e0       	ldi	r29, 0x00	; 0
 1b0:	88 ee       	ldi	r24, 0xE8	; 232
 1b2:	93 e0       	ldi	r25, 0x03	; 3
 1b4:	e4 df       	rcall	.-56     	; 0x17e <delay_us>
 1b6:	21 96       	adiw	r28, 0x01	; 1
 1b8:	0c 17       	cp	r16, r28
 1ba:	1d 07       	cpc	r17, r29
 1bc:	c9 f7       	brne	.-14     	; 0x1b0 <delay_ms+0x14>
}
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	08 95       	ret

000001c8 <main>:

//
int main(void)
{
 int i=0;
 init_devices();
 1c8:	c3 df       	rcall	.-122    	; 0x150 <init_devices>


//
int main(void)
{
 int i=0;
 1ca:	00 e0       	ldi	r16, 0x00	; 0
 1cc:	10 e0       	ldi	r17, 0x00	; 0
 init_devices();
 //insert your functional code here...
 while(1){
 	i++;
	itoa(i, buff, 10);
	printf("%s\r\n",buff);
 1ce:	0f 2e       	mov	r0, r31
 1d0:	f6 e0       	ldi	r31, 0x06	; 6
 1d2:	ef 2e       	mov	r14, r31
 1d4:	f1 e0       	ldi	r31, 0x01	; 1
 1d6:	ff 2e       	mov	r15, r31
 1d8:	f0 2d       	mov	r31, r0
	delay_ms(800);

	sprintf(buff,"%d",i);
 1da:	0f 2e       	mov	r0, r31
 1dc:	fb e0       	ldi	r31, 0x0B	; 11
 1de:	af 2e       	mov	r10, r31
 1e0:	f1 e0       	ldi	r31, 0x01	; 1
 1e2:	bf 2e       	mov	r11, r31
 1e4:	f0 2d       	mov	r31, r0
	printf("%s\r\n",buff);
	delay_ms(800);
    printf("testing...");
 1e6:	0f 2e       	mov	r0, r31
 1e8:	fe e0       	ldi	r31, 0x0E	; 14
 1ea:	cf 2e       	mov	r12, r31
 1ec:	f1 e0       	ldi	r31, 0x01	; 1
 1ee:	df 2e       	mov	r13, r31
 1f0:	f0 2d       	mov	r31, r0
	delay_ms(800);
	printf("$$CS\r");
 1f2:	0f 2e       	mov	r0, r31
 1f4:	f9 e1       	ldi	r31, 0x19	; 25
 1f6:	8f 2e       	mov	r8, r31
 1f8:	f1 e0       	ldi	r31, 0x01	; 1
 1fa:	9f 2e       	mov	r9, r31
 1fc:	f0 2d       	mov	r31, r0
	delay_ms(800);	
	printf("$$L0\r");
 1fe:	0f 2e       	mov	r0, r31
 200:	ff e1       	ldi	r31, 0x1F	; 31
 202:	6f 2e       	mov	r6, r31
 204:	f1 e0       	ldi	r31, 0x01	; 1
 206:	7f 2e       	mov	r7, r31
 208:	f0 2d       	mov	r31, r0
	delay_ms(800);	
	printf("$$L1\r");
 20a:	0f 2e       	mov	r0, r31
 20c:	f5 e2       	ldi	r31, 0x25	; 37
 20e:	4f 2e       	mov	r4, r31
 210:	f1 e0       	ldi	r31, 0x01	; 1
 212:	5f 2e       	mov	r5, r31
 214:	f0 2d       	mov	r31, r0
{
 int i=0;
 init_devices();
 //insert your functional code here...
 while(1){
 	i++;
 216:	0f 5f       	subi	r16, 0xFF	; 255
 218:	1f 4f       	sbci	r17, 0xFF	; 255
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 21a:	4a e0       	ldi	r20, 0x0A	; 10
 21c:	6c e2       	ldi	r22, 0x2C	; 44
 21e:	71 e0       	ldi	r23, 0x01	; 1
 220:	c8 01       	movw	r24, r16
 222:	3a d0       	rcall	.+116    	; 0x298 <__itoa_ncheck>
	itoa(i, buff, 10);
	printf("%s\r\n",buff);
 224:	cc e2       	ldi	r28, 0x2C	; 44
 226:	d1 e0       	ldi	r29, 0x01	; 1
 228:	df 93       	push	r29
 22a:	cf 93       	push	r28
 22c:	ff 92       	push	r15
 22e:	ef 92       	push	r14
 230:	a0 d0       	rcall	.+320    	; 0x372 <printf>
	delay_ms(800);
 232:	80 e2       	ldi	r24, 0x20	; 32
 234:	93 e0       	ldi	r25, 0x03	; 3
 236:	b2 df       	rcall	.-156    	; 0x19c <delay_ms>
 238:	1f 93       	push	r17

	sprintf(buff,"%d",i);
 23a:	0f 93       	push	r16
 23c:	bf 92       	push	r11
 23e:	af 92       	push	r10
 240:	df 93       	push	r29
 242:	cf 93       	push	r28
 244:	a9 d0       	rcall	.+338    	; 0x398 <sprintf>
 246:	df 93       	push	r29
	printf("%s\r\n",buff);
 248:	cf 93       	push	r28
 24a:	ff 92       	push	r15
 24c:	ef 92       	push	r14
 24e:	91 d0       	rcall	.+290    	; 0x372 <printf>
 250:	80 e2       	ldi	r24, 0x20	; 32
	delay_ms(800);
 252:	93 e0       	ldi	r25, 0x03	; 3
 254:	a3 df       	rcall	.-186    	; 0x19c <delay_ms>
 256:	df 92       	push	r13
    printf("testing...");
 258:	cf 92       	push	r12
 25a:	8b d0       	rcall	.+278    	; 0x372 <printf>
 25c:	80 e2       	ldi	r24, 0x20	; 32
	delay_ms(800);
 25e:	93 e0       	ldi	r25, 0x03	; 3
 260:	9d df       	rcall	.-198    	; 0x19c <delay_ms>
 262:	9f 92       	push	r9
	printf("$$CS\r");
 264:	8f 92       	push	r8
 266:	85 d0       	rcall	.+266    	; 0x372 <printf>
 268:	80 e2       	ldi	r24, 0x20	; 32
	delay_ms(800);	
 26a:	93 e0       	ldi	r25, 0x03	; 3
 26c:	97 df       	rcall	.-210    	; 0x19c <delay_ms>
 26e:	7f 92       	push	r7
	printf("$$L0\r");
 270:	6f 92       	push	r6
 272:	7f d0       	rcall	.+254    	; 0x372 <printf>
 274:	80 e2       	ldi	r24, 0x20	; 32
	delay_ms(800);	
 276:	93 e0       	ldi	r25, 0x03	; 3
 278:	91 df       	rcall	.-222    	; 0x19c <delay_ms>
 27a:	5f 92       	push	r5
 27c:	4f 92       	push	r4
	printf("$$L1\r");
 27e:	79 d0       	rcall	.+242    	; 0x372 <printf>
 280:	80 e2       	ldi	r24, 0x20	; 32
 282:	93 e0       	ldi	r25, 0x03	; 3
 284:	8b df       	rcall	.-234    	; 0x19c <delay_ms>
	delay_ms(800);
 286:	8d b7       	in	r24, 0x3d	; 61
 288:	9e b7       	in	r25, 0x3e	; 62
 28a:	46 96       	adiw	r24, 0x16	; 22
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	9e bf       	out	0x3e, r25	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	8d bf       	out	0x3d, r24	; 61
 296:	bf cf       	rjmp	.-130    	; 0x216 <main+0x4e>

00000298 <__itoa_ncheck>:
 298:	bb 27       	eor	r27, r27
 29a:	4a 30       	cpi	r20, 0x0A	; 10
 29c:	31 f4       	brne	.+12     	; 0x2aa <__itoa_ncheck+0x12>
 29e:	99 23       	and	r25, r25
 2a0:	22 f4       	brpl	.+8      	; 0x2aa <__itoa_ncheck+0x12>
 2a2:	bd e2       	ldi	r27, 0x2D	; 45
 2a4:	90 95       	com	r25
 2a6:	81 95       	neg	r24
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	01 c0       	rjmp	.+2      	; 0x2ae <__utoa_common>

000002ac <__utoa_ncheck>:
 2ac:	bb 27       	eor	r27, r27

000002ae <__utoa_common>:
 2ae:	fb 01       	movw	r30, r22
 2b0:	55 27       	eor	r21, r21
 2b2:	aa 27       	eor	r26, r26
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	aa 1f       	adc	r26, r26
 2ba:	a4 17       	cp	r26, r20
 2bc:	10 f0       	brcs	.+4      	; 0x2c2 <__utoa_common+0x14>
 2be:	a4 1b       	sub	r26, r20
 2c0:	83 95       	inc	r24
 2c2:	50 51       	subi	r21, 0x10	; 16
 2c4:	b9 f7       	brne	.-18     	; 0x2b4 <__utoa_common+0x6>
 2c6:	a0 5d       	subi	r26, 0xD0	; 208
 2c8:	aa 33       	cpi	r26, 0x3A	; 58
 2ca:	08 f0       	brcs	.+2      	; 0x2ce <__utoa_common+0x20>
 2cc:	a9 5d       	subi	r26, 0xD9	; 217
 2ce:	a1 93       	st	Z+, r26
 2d0:	00 97       	sbiw	r24, 0x00	; 0
 2d2:	79 f7       	brne	.-34     	; 0x2b2 <__utoa_common+0x4>
 2d4:	b1 11       	cpse	r27, r1
 2d6:	b1 93       	st	Z+, r27
 2d8:	11 92       	st	Z+, r1
 2da:	cb 01       	movw	r24, r22
 2dc:	e0 c3       	rjmp	.+1984   	; 0xa9e <strrev>

000002de <fdevopen>:
 2de:	0f 93       	push	r16
 2e0:	1f 93       	push	r17
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	00 97       	sbiw	r24, 0x00	; 0
 2e8:	31 f4       	brne	.+12     	; 0x2f6 <fdevopen+0x18>
 2ea:	61 15       	cp	r22, r1
 2ec:	71 05       	cpc	r23, r1
 2ee:	19 f4       	brne	.+6      	; 0x2f6 <fdevopen+0x18>
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	39 c0       	rjmp	.+114    	; 0x368 <fdevopen+0x8a>
 2f6:	8b 01       	movw	r16, r22
 2f8:	ec 01       	movw	r28, r24
 2fa:	6e e0       	ldi	r22, 0x0E	; 14
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	75 d2       	rcall	.+1258   	; 0x7ee <calloc>
 304:	fc 01       	movw	r30, r24
 306:	89 2b       	or	r24, r25
 308:	99 f3       	breq	.-26     	; 0x2f0 <fdevopen+0x12>
 30a:	80 e8       	ldi	r24, 0x80	; 128
 30c:	83 83       	std	Z+3, r24	; 0x03
 30e:	01 15       	cp	r16, r1
 310:	11 05       	cpc	r17, r1
 312:	71 f0       	breq	.+28     	; 0x330 <fdevopen+0x52>
 314:	13 87       	std	Z+11, r17	; 0x0b
 316:	02 87       	std	Z+10, r16	; 0x0a
 318:	81 e8       	ldi	r24, 0x81	; 129
 31a:	83 83       	std	Z+3, r24	; 0x03
 31c:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__iob>
 320:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <__iob+0x1>
 324:	89 2b       	or	r24, r25
 326:	21 f4       	brne	.+8      	; 0x330 <fdevopen+0x52>
 328:	f0 93 4b 01 	sts	0x014B, r31	; 0x80014b <__iob+0x1>
 32c:	e0 93 4a 01 	sts	0x014A, r30	; 0x80014a <__iob>
 330:	20 97       	sbiw	r28, 0x00	; 0
 332:	c9 f0       	breq	.+50     	; 0x366 <fdevopen+0x88>
 334:	d1 87       	std	Z+9, r29	; 0x09
 336:	c0 87       	std	Z+8, r28	; 0x08
 338:	83 81       	ldd	r24, Z+3	; 0x03
 33a:	82 60       	ori	r24, 0x02	; 2
 33c:	83 83       	std	Z+3, r24	; 0x03
 33e:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__iob+0x2>
 342:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__iob+0x3>
 346:	89 2b       	or	r24, r25
 348:	71 f4       	brne	.+28     	; 0x366 <fdevopen+0x88>
 34a:	f0 93 4d 01 	sts	0x014D, r31	; 0x80014d <__iob+0x3>
 34e:	e0 93 4c 01 	sts	0x014C, r30	; 0x80014c <__iob+0x2>
 352:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__iob+0x4>
 356:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <__iob+0x5>
 35a:	89 2b       	or	r24, r25
 35c:	21 f4       	brne	.+8      	; 0x366 <fdevopen+0x88>
 35e:	f0 93 4f 01 	sts	0x014F, r31	; 0x80014f <__iob+0x5>
 362:	e0 93 4e 01 	sts	0x014E, r30	; 0x80014e <__iob+0x4>
 366:	cf 01       	movw	r24, r30
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	08 95       	ret

00000372 <printf>:
 372:	cf 93       	push	r28
 374:	df 93       	push	r29
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
 37a:	ae 01       	movw	r20, r28
 37c:	4b 5f       	subi	r20, 0xFB	; 251
 37e:	5f 4f       	sbci	r21, 0xFF	; 255
 380:	fa 01       	movw	r30, r20
 382:	61 91       	ld	r22, Z+
 384:	71 91       	ld	r23, Z+
 386:	af 01       	movw	r20, r30
 388:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__iob+0x2>
 38c:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__iob+0x3>
 390:	31 d0       	rcall	.+98     	; 0x3f4 <vfprintf>
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <sprintf>:
 398:	0f 93       	push	r16
 39a:	1f 93       	push	r17
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	cd b7       	in	r28, 0x3d	; 61
 3a2:	de b7       	in	r29, 0x3e	; 62
 3a4:	2e 97       	sbiw	r28, 0x0e	; 14
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	f8 94       	cli
 3aa:	de bf       	out	0x3e, r29	; 62
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	cd bf       	out	0x3d, r28	; 61
 3b0:	0d 89       	ldd	r16, Y+21	; 0x15
 3b2:	1e 89       	ldd	r17, Y+22	; 0x16
 3b4:	86 e0       	ldi	r24, 0x06	; 6
 3b6:	8c 83       	std	Y+4, r24	; 0x04
 3b8:	1a 83       	std	Y+2, r17	; 0x02
 3ba:	09 83       	std	Y+1, r16	; 0x01
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	9f e7       	ldi	r25, 0x7F	; 127
 3c0:	9e 83       	std	Y+6, r25	; 0x06
 3c2:	8d 83       	std	Y+5, r24	; 0x05
 3c4:	ae 01       	movw	r20, r28
 3c6:	47 5e       	subi	r20, 0xE7	; 231
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	6f 89       	ldd	r22, Y+23	; 0x17
 3cc:	78 8d       	ldd	r23, Y+24	; 0x18
 3ce:	ce 01       	movw	r24, r28
 3d0:	01 96       	adiw	r24, 0x01	; 1
 3d2:	10 d0       	rcall	.+32     	; 0x3f4 <vfprintf>
 3d4:	ef 81       	ldd	r30, Y+7	; 0x07
 3d6:	f8 85       	ldd	r31, Y+8	; 0x08
 3d8:	e0 0f       	add	r30, r16
 3da:	f1 1f       	adc	r31, r17
 3dc:	10 82       	st	Z, r1
 3de:	2e 96       	adiw	r28, 0x0e	; 14
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	f8 94       	cli
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	cd bf       	out	0x3d, r28	; 61
 3ea:	df 91       	pop	r29
 3ec:	cf 91       	pop	r28
 3ee:	1f 91       	pop	r17
 3f0:	0f 91       	pop	r16
 3f2:	08 95       	ret

000003f4 <vfprintf>:
 3f4:	2f 92       	push	r2
 3f6:	3f 92       	push	r3
 3f8:	4f 92       	push	r4
 3fa:	5f 92       	push	r5
 3fc:	6f 92       	push	r6
 3fe:	7f 92       	push	r7
 400:	8f 92       	push	r8
 402:	9f 92       	push	r9
 404:	af 92       	push	r10
 406:	bf 92       	push	r11
 408:	cf 92       	push	r12
 40a:	df 92       	push	r13
 40c:	ef 92       	push	r14
 40e:	ff 92       	push	r15
 410:	0f 93       	push	r16
 412:	1f 93       	push	r17
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	2b 97       	sbiw	r28, 0x0b	; 11
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
 428:	6c 01       	movw	r12, r24
 42a:	7b 01       	movw	r14, r22
 42c:	8a 01       	movw	r16, r20
 42e:	fc 01       	movw	r30, r24
 430:	17 82       	std	Z+7, r1	; 0x07
 432:	16 82       	std	Z+6, r1	; 0x06
 434:	83 81       	ldd	r24, Z+3	; 0x03
 436:	81 ff       	sbrs	r24, 1
 438:	bf c1       	rjmp	.+894    	; 0x7b8 <__LOCK_REGION_LENGTH__+0x3b8>
 43a:	ce 01       	movw	r24, r28
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	3c 01       	movw	r6, r24
 440:	f6 01       	movw	r30, r12
 442:	93 81       	ldd	r25, Z+3	; 0x03
 444:	f7 01       	movw	r30, r14
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	7f 01       	movw	r14, r30
 450:	88 23       	and	r24, r24
 452:	09 f4       	brne	.+2      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 454:	ad c1       	rjmp	.+858    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 456:	85 32       	cpi	r24, 0x25	; 37
 458:	39 f4       	brne	.+14     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45a:	93 fd       	sbrc	r25, 3
 45c:	85 91       	lpm	r24, Z+
 45e:	93 ff       	sbrs	r25, 3
 460:	81 91       	ld	r24, Z+
 462:	7f 01       	movw	r14, r30
 464:	85 32       	cpi	r24, 0x25	; 37
 466:	21 f4       	brne	.+8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 468:	b6 01       	movw	r22, r12
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	28 d3       	rcall	.+1616   	; 0xabe <fputc>
 46e:	e8 cf       	rjmp	.-48     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 470:	91 2c       	mov	r9, r1
 472:	21 2c       	mov	r2, r1
 474:	31 2c       	mov	r3, r1
 476:	ff e1       	ldi	r31, 0x1F	; 31
 478:	f3 15       	cp	r31, r3
 47a:	d8 f0       	brcs	.+54     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 47c:	8b 32       	cpi	r24, 0x2B	; 43
 47e:	79 f0       	breq	.+30     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 480:	38 f4       	brcc	.+14     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 482:	80 32       	cpi	r24, 0x20	; 32
 484:	79 f0       	breq	.+30     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 486:	83 32       	cpi	r24, 0x23	; 35
 488:	a1 f4       	brne	.+40     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 48a:	23 2d       	mov	r18, r3
 48c:	20 61       	ori	r18, 0x10	; 16
 48e:	1d c0       	rjmp	.+58     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 490:	8d 32       	cpi	r24, 0x2D	; 45
 492:	61 f0       	breq	.+24     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 494:	80 33       	cpi	r24, 0x30	; 48
 496:	69 f4       	brne	.+26     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 498:	23 2d       	mov	r18, r3
 49a:	21 60       	ori	r18, 0x01	; 1
 49c:	16 c0       	rjmp	.+44     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 49e:	83 2d       	mov	r24, r3
 4a0:	82 60       	ori	r24, 0x02	; 2
 4a2:	38 2e       	mov	r3, r24
 4a4:	e3 2d       	mov	r30, r3
 4a6:	e4 60       	ori	r30, 0x04	; 4
 4a8:	3e 2e       	mov	r3, r30
 4aa:	2a c0       	rjmp	.+84     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ac:	f3 2d       	mov	r31, r3
 4ae:	f8 60       	ori	r31, 0x08	; 8
 4b0:	1d c0       	rjmp	.+58     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4b2:	37 fc       	sbrc	r3, 7
 4b4:	2d c0       	rjmp	.+90     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4b6:	20 ed       	ldi	r18, 0xD0	; 208
 4b8:	28 0f       	add	r18, r24
 4ba:	2a 30       	cpi	r18, 0x0A	; 10
 4bc:	40 f0       	brcs	.+16     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4be:	8e 32       	cpi	r24, 0x2E	; 46
 4c0:	b9 f4       	brne	.+46     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4c2:	36 fc       	sbrc	r3, 6
 4c4:	75 c1       	rjmp	.+746    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 4c6:	23 2d       	mov	r18, r3
 4c8:	20 64       	ori	r18, 0x40	; 64
 4ca:	32 2e       	mov	r3, r18
 4cc:	19 c0       	rjmp	.+50     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d2:	8a e0       	ldi	r24, 0x0A	; 10
 4d4:	98 9e       	mul	r9, r24
 4d6:	20 0d       	add	r18, r0
 4d8:	11 24       	eor	r1, r1
 4da:	92 2e       	mov	r9, r18
 4dc:	11 c0       	rjmp	.+34     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4de:	ea e0       	ldi	r30, 0x0A	; 10
 4e0:	2e 9e       	mul	r2, r30
 4e2:	20 0d       	add	r18, r0
 4e4:	11 24       	eor	r1, r1
 4e6:	22 2e       	mov	r2, r18
 4e8:	f3 2d       	mov	r31, r3
 4ea:	f0 62       	ori	r31, 0x20	; 32
 4ec:	3f 2e       	mov	r3, r31
 4ee:	08 c0       	rjmp	.+16     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f0:	8c 36       	cpi	r24, 0x6C	; 108
 4f2:	21 f4       	brne	.+8      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f4:	83 2d       	mov	r24, r3
 4f6:	80 68       	ori	r24, 0x80	; 128
 4f8:	38 2e       	mov	r3, r24
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fc:	88 36       	cpi	r24, 0x68	; 104
 4fe:	41 f4       	brne	.+16     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 500:	f7 01       	movw	r30, r14
 502:	93 fd       	sbrc	r25, 3
 504:	85 91       	lpm	r24, Z+
 506:	93 ff       	sbrs	r25, 3
 508:	81 91       	ld	r24, Z+
 50a:	7f 01       	movw	r14, r30
 50c:	81 11       	cpse	r24, r1
 50e:	b3 cf       	rjmp	.-154    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 510:	98 2f       	mov	r25, r24
 512:	9f 7d       	andi	r25, 0xDF	; 223
 514:	95 54       	subi	r25, 0x45	; 69
 516:	93 30       	cpi	r25, 0x03	; 3
 518:	28 f4       	brcc	.+10     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 51a:	0c 5f       	subi	r16, 0xFC	; 252
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	9f e3       	ldi	r25, 0x3F	; 63
 520:	99 83       	std	Y+1, r25	; 0x01
 522:	0d c0       	rjmp	.+26     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 524:	83 36       	cpi	r24, 0x63	; 99
 526:	31 f0       	breq	.+12     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 528:	83 37       	cpi	r24, 0x73	; 115
 52a:	71 f0       	breq	.+28     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 52c:	83 35       	cpi	r24, 0x53	; 83
 52e:	09 f0       	breq	.+2      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 530:	55 c0       	rjmp	.+170    	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 532:	20 c0       	rjmp	.+64     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 534:	f8 01       	movw	r30, r16
 536:	80 81       	ld	r24, Z
 538:	89 83       	std	Y+1, r24	; 0x01
 53a:	0e 5f       	subi	r16, 0xFE	; 254
 53c:	1f 4f       	sbci	r17, 0xFF	; 255
 53e:	88 24       	eor	r8, r8
 540:	83 94       	inc	r8
 542:	91 2c       	mov	r9, r1
 544:	53 01       	movw	r10, r6
 546:	12 c0       	rjmp	.+36     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 548:	28 01       	movw	r4, r16
 54a:	f2 e0       	ldi	r31, 0x02	; 2
 54c:	4f 0e       	add	r4, r31
 54e:	51 1c       	adc	r5, r1
 550:	f8 01       	movw	r30, r16
 552:	a0 80       	ld	r10, Z
 554:	b1 80       	ldd	r11, Z+1	; 0x01
 556:	36 fe       	sbrs	r3, 6
 558:	03 c0       	rjmp	.+6      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55a:	69 2d       	mov	r22, r9
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	02 c0       	rjmp	.+4      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 560:	6f ef       	ldi	r22, 0xFF	; 255
 562:	7f ef       	ldi	r23, 0xFF	; 255
 564:	c5 01       	movw	r24, r10
 566:	90 d2       	rcall	.+1312   	; 0xa88 <strnlen>
 568:	4c 01       	movw	r8, r24
 56a:	82 01       	movw	r16, r4
 56c:	f3 2d       	mov	r31, r3
 56e:	ff 77       	andi	r31, 0x7F	; 127
 570:	3f 2e       	mov	r3, r31
 572:	15 c0       	rjmp	.+42     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 574:	28 01       	movw	r4, r16
 576:	22 e0       	ldi	r18, 0x02	; 2
 578:	42 0e       	add	r4, r18
 57a:	51 1c       	adc	r5, r1
 57c:	f8 01       	movw	r30, r16
 57e:	a0 80       	ld	r10, Z
 580:	b1 80       	ldd	r11, Z+1	; 0x01
 582:	36 fe       	sbrs	r3, 6
 584:	03 c0       	rjmp	.+6      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 586:	69 2d       	mov	r22, r9
 588:	70 e0       	ldi	r23, 0x00	; 0
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58c:	6f ef       	ldi	r22, 0xFF	; 255
 58e:	7f ef       	ldi	r23, 0xFF	; 255
 590:	c5 01       	movw	r24, r10
 592:	68 d2       	rcall	.+1232   	; 0xa64 <strnlen_P>
 594:	4c 01       	movw	r8, r24
 596:	f3 2d       	mov	r31, r3
 598:	f0 68       	ori	r31, 0x80	; 128
 59a:	3f 2e       	mov	r3, r31
 59c:	82 01       	movw	r16, r4
 59e:	33 fc       	sbrc	r3, 3
 5a0:	19 c0       	rjmp	.+50     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5a2:	82 2d       	mov	r24, r2
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	88 16       	cp	r8, r24
 5a8:	99 06       	cpc	r9, r25
 5aa:	a0 f4       	brcc	.+40     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e2       	ldi	r24, 0x20	; 32
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	85 d2       	rcall	.+1290   	; 0xabe <fputc>
 5b4:	2a 94       	dec	r2
 5b6:	f5 cf       	rjmp	.-22     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 5b8:	f5 01       	movw	r30, r10
 5ba:	37 fc       	sbrc	r3, 7
 5bc:	85 91       	lpm	r24, Z+
 5be:	37 fe       	sbrs	r3, 7
 5c0:	81 91       	ld	r24, Z+
 5c2:	5f 01       	movw	r10, r30
 5c4:	b6 01       	movw	r22, r12
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	7a d2       	rcall	.+1268   	; 0xabe <fputc>
 5ca:	21 10       	cpse	r2, r1
 5cc:	2a 94       	dec	r2
 5ce:	21 e0       	ldi	r18, 0x01	; 1
 5d0:	82 1a       	sub	r8, r18
 5d2:	91 08       	sbc	r9, r1
 5d4:	81 14       	cp	r8, r1
 5d6:	91 04       	cpc	r9, r1
 5d8:	79 f7       	brne	.-34     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5da:	e1 c0       	rjmp	.+450    	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
 5dc:	84 36       	cpi	r24, 0x64	; 100
 5de:	11 f0       	breq	.+4      	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5e0:	89 36       	cpi	r24, 0x69	; 105
 5e2:	39 f5       	brne	.+78     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 5e4:	f8 01       	movw	r30, r16
 5e6:	37 fe       	sbrs	r3, 7
 5e8:	07 c0       	rjmp	.+14     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ea:	60 81       	ld	r22, Z
 5ec:	71 81       	ldd	r23, Z+1	; 0x01
 5ee:	82 81       	ldd	r24, Z+2	; 0x02
 5f0:	93 81       	ldd	r25, Z+3	; 0x03
 5f2:	0c 5f       	subi	r16, 0xFC	; 252
 5f4:	1f 4f       	sbci	r17, 0xFF	; 255
 5f6:	08 c0       	rjmp	.+16     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f8:	60 81       	ld	r22, Z
 5fa:	71 81       	ldd	r23, Z+1	; 0x01
 5fc:	07 2e       	mov	r0, r23
 5fe:	00 0c       	add	r0, r0
 600:	88 0b       	sbc	r24, r24
 602:	99 0b       	sbc	r25, r25
 604:	0e 5f       	subi	r16, 0xFE	; 254
 606:	1f 4f       	sbci	r17, 0xFF	; 255
 608:	f3 2d       	mov	r31, r3
 60a:	ff 76       	andi	r31, 0x6F	; 111
 60c:	3f 2e       	mov	r3, r31
 60e:	97 ff       	sbrs	r25, 7
 610:	09 c0       	rjmp	.+18     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 612:	90 95       	com	r25
 614:	80 95       	com	r24
 616:	70 95       	com	r23
 618:	61 95       	neg	r22
 61a:	7f 4f       	sbci	r23, 0xFF	; 255
 61c:	8f 4f       	sbci	r24, 0xFF	; 255
 61e:	9f 4f       	sbci	r25, 0xFF	; 255
 620:	f0 68       	ori	r31, 0x80	; 128
 622:	3f 2e       	mov	r3, r31
 624:	2a e0       	ldi	r18, 0x0A	; 10
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	a3 01       	movw	r20, r6
 62a:	85 d2       	rcall	.+1290   	; 0xb36 <__ultoa_invert>
 62c:	88 2e       	mov	r8, r24
 62e:	86 18       	sub	r8, r6
 630:	44 c0       	rjmp	.+136    	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 632:	85 37       	cpi	r24, 0x75	; 117
 634:	31 f4       	brne	.+12     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 636:	23 2d       	mov	r18, r3
 638:	2f 7e       	andi	r18, 0xEF	; 239
 63a:	b2 2e       	mov	r11, r18
 63c:	2a e0       	ldi	r18, 0x0A	; 10
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	25 c0       	rjmp	.+74     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 642:	93 2d       	mov	r25, r3
 644:	99 7f       	andi	r25, 0xF9	; 249
 646:	b9 2e       	mov	r11, r25
 648:	8f 36       	cpi	r24, 0x6F	; 111
 64a:	c1 f0       	breq	.+48     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 64c:	18 f4       	brcc	.+6      	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 64e:	88 35       	cpi	r24, 0x58	; 88
 650:	79 f0       	breq	.+30     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 652:	ae c0       	rjmp	.+348    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 654:	80 37       	cpi	r24, 0x70	; 112
 656:	19 f0       	breq	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 658:	88 37       	cpi	r24, 0x78	; 120
 65a:	21 f0       	breq	.+8      	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 65c:	a9 c0       	rjmp	.+338    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 65e:	e9 2f       	mov	r30, r25
 660:	e0 61       	ori	r30, 0x10	; 16
 662:	be 2e       	mov	r11, r30
 664:	b4 fe       	sbrs	r11, 4
 666:	0d c0       	rjmp	.+26     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 668:	fb 2d       	mov	r31, r11
 66a:	f4 60       	ori	r31, 0x04	; 4
 66c:	bf 2e       	mov	r11, r31
 66e:	09 c0       	rjmp	.+18     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 670:	34 fe       	sbrs	r3, 4
 672:	0a c0       	rjmp	.+20     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 674:	29 2f       	mov	r18, r25
 676:	26 60       	ori	r18, 0x06	; 6
 678:	b2 2e       	mov	r11, r18
 67a:	06 c0       	rjmp	.+12     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 67c:	28 e0       	ldi	r18, 0x08	; 8
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	05 c0       	rjmp	.+10     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 682:	20 e1       	ldi	r18, 0x10	; 16
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	32 e0       	ldi	r19, 0x02	; 2
 68c:	f8 01       	movw	r30, r16
 68e:	b7 fe       	sbrs	r11, 7
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 692:	60 81       	ld	r22, Z
 694:	71 81       	ldd	r23, Z+1	; 0x01
 696:	82 81       	ldd	r24, Z+2	; 0x02
 698:	93 81       	ldd	r25, Z+3	; 0x03
 69a:	0c 5f       	subi	r16, 0xFC	; 252
 69c:	1f 4f       	sbci	r17, 0xFF	; 255
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6a0:	60 81       	ld	r22, Z
 6a2:	71 81       	ldd	r23, Z+1	; 0x01
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 5f       	subi	r16, 0xFE	; 254
 6aa:	1f 4f       	sbci	r17, 0xFF	; 255
 6ac:	a3 01       	movw	r20, r6
 6ae:	43 d2       	rcall	.+1158   	; 0xb36 <__ultoa_invert>
 6b0:	88 2e       	mov	r8, r24
 6b2:	86 18       	sub	r8, r6
 6b4:	fb 2d       	mov	r31, r11
 6b6:	ff 77       	andi	r31, 0x7F	; 127
 6b8:	3f 2e       	mov	r3, r31
 6ba:	36 fe       	sbrs	r3, 6
 6bc:	0d c0       	rjmp	.+26     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 6be:	23 2d       	mov	r18, r3
 6c0:	2e 7f       	andi	r18, 0xFE	; 254
 6c2:	a2 2e       	mov	r10, r18
 6c4:	89 14       	cp	r8, r9
 6c6:	58 f4       	brcc	.+22     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c8:	34 fe       	sbrs	r3, 4
 6ca:	0b c0       	rjmp	.+22     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6cc:	32 fc       	sbrc	r3, 2
 6ce:	09 c0       	rjmp	.+18     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d0:	83 2d       	mov	r24, r3
 6d2:	8e 7e       	andi	r24, 0xEE	; 238
 6d4:	a8 2e       	mov	r10, r24
 6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d8:	b8 2c       	mov	r11, r8
 6da:	a3 2c       	mov	r10, r3
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6de:	b8 2c       	mov	r11, r8
 6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6e2:	b9 2c       	mov	r11, r9
 6e4:	a4 fe       	sbrs	r10, 4
 6e6:	0f c0       	rjmp	.+30     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 6e8:	fe 01       	movw	r30, r28
 6ea:	e8 0d       	add	r30, r8
 6ec:	f1 1d       	adc	r31, r1
 6ee:	80 81       	ld	r24, Z
 6f0:	80 33       	cpi	r24, 0x30	; 48
 6f2:	21 f4       	brne	.+8      	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6f4:	9a 2d       	mov	r25, r10
 6f6:	99 7e       	andi	r25, 0xE9	; 233
 6f8:	a9 2e       	mov	r10, r25
 6fa:	09 c0       	rjmp	.+18     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 6fc:	a2 fe       	sbrs	r10, 2
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 700:	b3 94       	inc	r11
 702:	b3 94       	inc	r11
 704:	04 c0       	rjmp	.+8      	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 706:	8a 2d       	mov	r24, r10
 708:	86 78       	andi	r24, 0x86	; 134
 70a:	09 f0       	breq	.+2      	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 70c:	b3 94       	inc	r11
 70e:	a3 fc       	sbrc	r10, 3
 710:	10 c0       	rjmp	.+32     	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 712:	a0 fe       	sbrs	r10, 0
 714:	06 c0       	rjmp	.+12     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 716:	b2 14       	cp	r11, r2
 718:	80 f4       	brcc	.+32     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 71a:	28 0c       	add	r2, r8
 71c:	92 2c       	mov	r9, r2
 71e:	9b 18       	sub	r9, r11
 720:	0d c0       	rjmp	.+26     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 722:	b2 14       	cp	r11, r2
 724:	58 f4       	brcc	.+22     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 726:	b6 01       	movw	r22, r12
 728:	80 e2       	ldi	r24, 0x20	; 32
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	c8 d1       	rcall	.+912    	; 0xabe <fputc>
 72e:	b3 94       	inc	r11
 730:	f8 cf       	rjmp	.-16     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 732:	b2 14       	cp	r11, r2
 734:	18 f4       	brcc	.+6      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 736:	2b 18       	sub	r2, r11
 738:	02 c0       	rjmp	.+4      	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 73a:	98 2c       	mov	r9, r8
 73c:	21 2c       	mov	r2, r1
 73e:	a4 fe       	sbrs	r10, 4
 740:	0f c0       	rjmp	.+30     	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 742:	b6 01       	movw	r22, r12
 744:	80 e3       	ldi	r24, 0x30	; 48
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	ba d1       	rcall	.+884    	; 0xabe <fputc>
 74a:	a2 fe       	sbrs	r10, 2
 74c:	16 c0       	rjmp	.+44     	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 74e:	a1 fc       	sbrc	r10, 1
 750:	03 c0       	rjmp	.+6      	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 752:	88 e7       	ldi	r24, 0x78	; 120
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
 758:	88 e5       	ldi	r24, 0x58	; 88
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	b6 01       	movw	r22, r12
 75e:	0c c0       	rjmp	.+24     	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 760:	8a 2d       	mov	r24, r10
 762:	86 78       	andi	r24, 0x86	; 134
 764:	51 f0       	breq	.+20     	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 766:	a1 fe       	sbrs	r10, 1
 768:	02 c0       	rjmp	.+4      	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 76a:	8b e2       	ldi	r24, 0x2B	; 43
 76c:	01 c0       	rjmp	.+2      	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 76e:	80 e2       	ldi	r24, 0x20	; 32
 770:	a7 fc       	sbrc	r10, 7
 772:	8d e2       	ldi	r24, 0x2D	; 45
 774:	b6 01       	movw	r22, r12
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	a2 d1       	rcall	.+836    	; 0xabe <fputc>
 77a:	89 14       	cp	r8, r9
 77c:	30 f4       	brcc	.+12     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
 77e:	b6 01       	movw	r22, r12
 780:	80 e3       	ldi	r24, 0x30	; 48
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	9c d1       	rcall	.+824    	; 0xabe <fputc>
 786:	9a 94       	dec	r9
 788:	f8 cf       	rjmp	.-16     	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 78a:	8a 94       	dec	r8
 78c:	f3 01       	movw	r30, r6
 78e:	e8 0d       	add	r30, r8
 790:	f1 1d       	adc	r31, r1
 792:	80 81       	ld	r24, Z
 794:	b6 01       	movw	r22, r12
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	92 d1       	rcall	.+804    	; 0xabe <fputc>
 79a:	81 10       	cpse	r8, r1
 79c:	f6 cf       	rjmp	.-20     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
 79e:	22 20       	and	r2, r2
 7a0:	09 f4       	brne	.+2      	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 7a2:	4e ce       	rjmp	.-868    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 7a4:	b6 01       	movw	r22, r12
 7a6:	80 e2       	ldi	r24, 0x20	; 32
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	89 d1       	rcall	.+786    	; 0xabe <fputc>
 7ac:	2a 94       	dec	r2
 7ae:	f7 cf       	rjmp	.-18     	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
 7b0:	f6 01       	movw	r30, r12
 7b2:	86 81       	ldd	r24, Z+6	; 0x06
 7b4:	97 81       	ldd	r25, Z+7	; 0x07
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <__LOCK_REGION_LENGTH__+0x3bc>
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	2b 96       	adiw	r28, 0x0b	; 11
 7be:	0f b6       	in	r0, 0x3f	; 63
 7c0:	f8 94       	cli
 7c2:	de bf       	out	0x3e, r29	; 62
 7c4:	0f be       	out	0x3f, r0	; 63
 7c6:	cd bf       	out	0x3d, r28	; 61
 7c8:	df 91       	pop	r29
 7ca:	cf 91       	pop	r28
 7cc:	1f 91       	pop	r17
 7ce:	0f 91       	pop	r16
 7d0:	ff 90       	pop	r15
 7d2:	ef 90       	pop	r14
 7d4:	df 90       	pop	r13
 7d6:	cf 90       	pop	r12
 7d8:	bf 90       	pop	r11
 7da:	af 90       	pop	r10
 7dc:	9f 90       	pop	r9
 7de:	8f 90       	pop	r8
 7e0:	7f 90       	pop	r7
 7e2:	6f 90       	pop	r6
 7e4:	5f 90       	pop	r5
 7e6:	4f 90       	pop	r4
 7e8:	3f 90       	pop	r3
 7ea:	2f 90       	pop	r2
 7ec:	08 95       	ret

000007ee <calloc>:
 7ee:	0f 93       	push	r16
 7f0:	1f 93       	push	r17
 7f2:	cf 93       	push	r28
 7f4:	df 93       	push	r29
 7f6:	86 9f       	mul	r24, r22
 7f8:	80 01       	movw	r16, r0
 7fa:	87 9f       	mul	r24, r23
 7fc:	10 0d       	add	r17, r0
 7fe:	96 9f       	mul	r25, r22
 800:	10 0d       	add	r17, r0
 802:	11 24       	eor	r1, r1
 804:	c8 01       	movw	r24, r16
 806:	0d d0       	rcall	.+26     	; 0x822 <malloc>
 808:	ec 01       	movw	r28, r24
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	21 f0       	breq	.+8      	; 0x816 <calloc+0x28>
 80e:	a8 01       	movw	r20, r16
 810:	60 e0       	ldi	r22, 0x00	; 0
 812:	70 e0       	ldi	r23, 0x00	; 0
 814:	32 d1       	rcall	.+612    	; 0xa7a <memset>
 816:	ce 01       	movw	r24, r28
 818:	df 91       	pop	r29
 81a:	cf 91       	pop	r28
 81c:	1f 91       	pop	r17
 81e:	0f 91       	pop	r16
 820:	08 95       	ret

00000822 <malloc>:
 822:	0f 93       	push	r16
 824:	1f 93       	push	r17
 826:	cf 93       	push	r28
 828:	df 93       	push	r29
 82a:	82 30       	cpi	r24, 0x02	; 2
 82c:	91 05       	cpc	r25, r1
 82e:	10 f4       	brcc	.+4      	; 0x834 <malloc+0x12>
 830:	82 e0       	ldi	r24, 0x02	; 2
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <__flp>
 838:	f0 91 53 01 	lds	r31, 0x0153	; 0x800153 <__flp+0x1>
 83c:	20 e0       	ldi	r18, 0x00	; 0
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	a0 e0       	ldi	r26, 0x00	; 0
 842:	b0 e0       	ldi	r27, 0x00	; 0
 844:	30 97       	sbiw	r30, 0x00	; 0
 846:	19 f1       	breq	.+70     	; 0x88e <malloc+0x6c>
 848:	40 81       	ld	r20, Z
 84a:	51 81       	ldd	r21, Z+1	; 0x01
 84c:	02 81       	ldd	r16, Z+2	; 0x02
 84e:	13 81       	ldd	r17, Z+3	; 0x03
 850:	48 17       	cp	r20, r24
 852:	59 07       	cpc	r21, r25
 854:	c8 f0       	brcs	.+50     	; 0x888 <malloc+0x66>
 856:	84 17       	cp	r24, r20
 858:	95 07       	cpc	r25, r21
 85a:	69 f4       	brne	.+26     	; 0x876 <malloc+0x54>
 85c:	10 97       	sbiw	r26, 0x00	; 0
 85e:	31 f0       	breq	.+12     	; 0x86c <malloc+0x4a>
 860:	12 96       	adiw	r26, 0x02	; 2
 862:	0c 93       	st	X, r16
 864:	12 97       	sbiw	r26, 0x02	; 2
 866:	13 96       	adiw	r26, 0x03	; 3
 868:	1c 93       	st	X, r17
 86a:	27 c0       	rjmp	.+78     	; 0x8ba <malloc+0x98>
 86c:	00 93 52 01 	sts	0x0152, r16	; 0x800152 <__flp>
 870:	10 93 53 01 	sts	0x0153, r17	; 0x800153 <__flp+0x1>
 874:	22 c0       	rjmp	.+68     	; 0x8ba <malloc+0x98>
 876:	21 15       	cp	r18, r1
 878:	31 05       	cpc	r19, r1
 87a:	19 f0       	breq	.+6      	; 0x882 <malloc+0x60>
 87c:	42 17       	cp	r20, r18
 87e:	53 07       	cpc	r21, r19
 880:	18 f4       	brcc	.+6      	; 0x888 <malloc+0x66>
 882:	9a 01       	movw	r18, r20
 884:	bd 01       	movw	r22, r26
 886:	ef 01       	movw	r28, r30
 888:	df 01       	movw	r26, r30
 88a:	f8 01       	movw	r30, r16
 88c:	db cf       	rjmp	.-74     	; 0x844 <malloc+0x22>
 88e:	21 15       	cp	r18, r1
 890:	31 05       	cpc	r19, r1
 892:	f9 f0       	breq	.+62     	; 0x8d2 <malloc+0xb0>
 894:	28 1b       	sub	r18, r24
 896:	39 0b       	sbc	r19, r25
 898:	24 30       	cpi	r18, 0x04	; 4
 89a:	31 05       	cpc	r19, r1
 89c:	80 f4       	brcc	.+32     	; 0x8be <malloc+0x9c>
 89e:	8a 81       	ldd	r24, Y+2	; 0x02
 8a0:	9b 81       	ldd	r25, Y+3	; 0x03
 8a2:	61 15       	cp	r22, r1
 8a4:	71 05       	cpc	r23, r1
 8a6:	21 f0       	breq	.+8      	; 0x8b0 <malloc+0x8e>
 8a8:	fb 01       	movw	r30, r22
 8aa:	93 83       	std	Z+3, r25	; 0x03
 8ac:	82 83       	std	Z+2, r24	; 0x02
 8ae:	04 c0       	rjmp	.+8      	; 0x8b8 <malloc+0x96>
 8b0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__flp+0x1>
 8b4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__flp>
 8b8:	fe 01       	movw	r30, r28
 8ba:	32 96       	adiw	r30, 0x02	; 2
 8bc:	44 c0       	rjmp	.+136    	; 0x946 <malloc+0x124>
 8be:	fe 01       	movw	r30, r28
 8c0:	e2 0f       	add	r30, r18
 8c2:	f3 1f       	adc	r31, r19
 8c4:	81 93       	st	Z+, r24
 8c6:	91 93       	st	Z+, r25
 8c8:	22 50       	subi	r18, 0x02	; 2
 8ca:	31 09       	sbc	r19, r1
 8cc:	39 83       	std	Y+1, r19	; 0x01
 8ce:	28 83       	st	Y, r18
 8d0:	3a c0       	rjmp	.+116    	; 0x946 <malloc+0x124>
 8d2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 8d6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 8da:	23 2b       	or	r18, r19
 8dc:	41 f4       	brne	.+16     	; 0x8ee <malloc+0xcc>
 8de:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8e2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8e6:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <__brkval+0x1>
 8ea:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <__brkval>
 8ee:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 8f2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 8f6:	21 15       	cp	r18, r1
 8f8:	31 05       	cpc	r19, r1
 8fa:	41 f4       	brne	.+16     	; 0x90c <malloc+0xea>
 8fc:	2d b7       	in	r18, 0x3d	; 61
 8fe:	3e b7       	in	r19, 0x3e	; 62
 900:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 904:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 908:	24 1b       	sub	r18, r20
 90a:	35 0b       	sbc	r19, r21
 90c:	e0 91 50 01 	lds	r30, 0x0150	; 0x800150 <__brkval>
 910:	f0 91 51 01 	lds	r31, 0x0151	; 0x800151 <__brkval+0x1>
 914:	e2 17       	cp	r30, r18
 916:	f3 07       	cpc	r31, r19
 918:	a0 f4       	brcc	.+40     	; 0x942 <malloc+0x120>
 91a:	2e 1b       	sub	r18, r30
 91c:	3f 0b       	sbc	r19, r31
 91e:	28 17       	cp	r18, r24
 920:	39 07       	cpc	r19, r25
 922:	78 f0       	brcs	.+30     	; 0x942 <malloc+0x120>
 924:	ac 01       	movw	r20, r24
 926:	4e 5f       	subi	r20, 0xFE	; 254
 928:	5f 4f       	sbci	r21, 0xFF	; 255
 92a:	24 17       	cp	r18, r20
 92c:	35 07       	cpc	r19, r21
 92e:	48 f0       	brcs	.+18     	; 0x942 <malloc+0x120>
 930:	4e 0f       	add	r20, r30
 932:	5f 1f       	adc	r21, r31
 934:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <__brkval+0x1>
 938:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <__brkval>
 93c:	81 93       	st	Z+, r24
 93e:	91 93       	st	Z+, r25
 940:	02 c0       	rjmp	.+4      	; 0x946 <malloc+0x124>
 942:	e0 e0       	ldi	r30, 0x00	; 0
 944:	f0 e0       	ldi	r31, 0x00	; 0
 946:	cf 01       	movw	r24, r30
 948:	df 91       	pop	r29
 94a:	cf 91       	pop	r28
 94c:	1f 91       	pop	r17
 94e:	0f 91       	pop	r16
 950:	08 95       	ret

00000952 <free>:
 952:	cf 93       	push	r28
 954:	df 93       	push	r29
 956:	00 97       	sbiw	r24, 0x00	; 0
 958:	09 f4       	brne	.+2      	; 0x95c <free+0xa>
 95a:	81 c0       	rjmp	.+258    	; 0xa5e <free+0x10c>
 95c:	fc 01       	movw	r30, r24
 95e:	32 97       	sbiw	r30, 0x02	; 2
 960:	13 82       	std	Z+3, r1	; 0x03
 962:	12 82       	std	Z+2, r1	; 0x02
 964:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <__flp>
 968:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <__flp+0x1>
 96c:	10 97       	sbiw	r26, 0x00	; 0
 96e:	81 f4       	brne	.+32     	; 0x990 <free+0x3e>
 970:	20 81       	ld	r18, Z
 972:	31 81       	ldd	r19, Z+1	; 0x01
 974:	82 0f       	add	r24, r18
 976:	93 1f       	adc	r25, r19
 978:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 97c:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 980:	28 17       	cp	r18, r24
 982:	39 07       	cpc	r19, r25
 984:	51 f5       	brne	.+84     	; 0x9da <free+0x88>
 986:	f0 93 51 01 	sts	0x0151, r31	; 0x800151 <__brkval+0x1>
 98a:	e0 93 50 01 	sts	0x0150, r30	; 0x800150 <__brkval>
 98e:	67 c0       	rjmp	.+206    	; 0xa5e <free+0x10c>
 990:	ed 01       	movw	r28, r26
 992:	20 e0       	ldi	r18, 0x00	; 0
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	ce 17       	cp	r28, r30
 998:	df 07       	cpc	r29, r31
 99a:	40 f4       	brcc	.+16     	; 0x9ac <free+0x5a>
 99c:	4a 81       	ldd	r20, Y+2	; 0x02
 99e:	5b 81       	ldd	r21, Y+3	; 0x03
 9a0:	9e 01       	movw	r18, r28
 9a2:	41 15       	cp	r20, r1
 9a4:	51 05       	cpc	r21, r1
 9a6:	f1 f0       	breq	.+60     	; 0x9e4 <free+0x92>
 9a8:	ea 01       	movw	r28, r20
 9aa:	f5 cf       	rjmp	.-22     	; 0x996 <free+0x44>
 9ac:	d3 83       	std	Z+3, r29	; 0x03
 9ae:	c2 83       	std	Z+2, r28	; 0x02
 9b0:	40 81       	ld	r20, Z
 9b2:	51 81       	ldd	r21, Z+1	; 0x01
 9b4:	84 0f       	add	r24, r20
 9b6:	95 1f       	adc	r25, r21
 9b8:	c8 17       	cp	r28, r24
 9ba:	d9 07       	cpc	r29, r25
 9bc:	59 f4       	brne	.+22     	; 0x9d4 <free+0x82>
 9be:	88 81       	ld	r24, Y
 9c0:	99 81       	ldd	r25, Y+1	; 0x01
 9c2:	84 0f       	add	r24, r20
 9c4:	95 1f       	adc	r25, r21
 9c6:	02 96       	adiw	r24, 0x02	; 2
 9c8:	91 83       	std	Z+1, r25	; 0x01
 9ca:	80 83       	st	Z, r24
 9cc:	8a 81       	ldd	r24, Y+2	; 0x02
 9ce:	9b 81       	ldd	r25, Y+3	; 0x03
 9d0:	93 83       	std	Z+3, r25	; 0x03
 9d2:	82 83       	std	Z+2, r24	; 0x02
 9d4:	21 15       	cp	r18, r1
 9d6:	31 05       	cpc	r19, r1
 9d8:	29 f4       	brne	.+10     	; 0x9e4 <free+0x92>
 9da:	f0 93 53 01 	sts	0x0153, r31	; 0x800153 <__flp+0x1>
 9de:	e0 93 52 01 	sts	0x0152, r30	; 0x800152 <__flp>
 9e2:	3d c0       	rjmp	.+122    	; 0xa5e <free+0x10c>
 9e4:	e9 01       	movw	r28, r18
 9e6:	fb 83       	std	Y+3, r31	; 0x03
 9e8:	ea 83       	std	Y+2, r30	; 0x02
 9ea:	49 91       	ld	r20, Y+
 9ec:	59 91       	ld	r21, Y+
 9ee:	c4 0f       	add	r28, r20
 9f0:	d5 1f       	adc	r29, r21
 9f2:	ec 17       	cp	r30, r28
 9f4:	fd 07       	cpc	r31, r29
 9f6:	61 f4       	brne	.+24     	; 0xa10 <free+0xbe>
 9f8:	80 81       	ld	r24, Z
 9fa:	91 81       	ldd	r25, Z+1	; 0x01
 9fc:	84 0f       	add	r24, r20
 9fe:	95 1f       	adc	r25, r21
 a00:	02 96       	adiw	r24, 0x02	; 2
 a02:	e9 01       	movw	r28, r18
 a04:	99 83       	std	Y+1, r25	; 0x01
 a06:	88 83       	st	Y, r24
 a08:	82 81       	ldd	r24, Z+2	; 0x02
 a0a:	93 81       	ldd	r25, Z+3	; 0x03
 a0c:	9b 83       	std	Y+3, r25	; 0x03
 a0e:	8a 83       	std	Y+2, r24	; 0x02
 a10:	e0 e0       	ldi	r30, 0x00	; 0
 a12:	f0 e0       	ldi	r31, 0x00	; 0
 a14:	12 96       	adiw	r26, 0x02	; 2
 a16:	8d 91       	ld	r24, X+
 a18:	9c 91       	ld	r25, X
 a1a:	13 97       	sbiw	r26, 0x03	; 3
 a1c:	00 97       	sbiw	r24, 0x00	; 0
 a1e:	19 f0       	breq	.+6      	; 0xa26 <free+0xd4>
 a20:	fd 01       	movw	r30, r26
 a22:	dc 01       	movw	r26, r24
 a24:	f7 cf       	rjmp	.-18     	; 0xa14 <free+0xc2>
 a26:	8d 91       	ld	r24, X+
 a28:	9c 91       	ld	r25, X
 a2a:	11 97       	sbiw	r26, 0x01	; 1
 a2c:	9d 01       	movw	r18, r26
 a2e:	2e 5f       	subi	r18, 0xFE	; 254
 a30:	3f 4f       	sbci	r19, 0xFF	; 255
 a32:	82 0f       	add	r24, r18
 a34:	93 1f       	adc	r25, r19
 a36:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 a3a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 a3e:	28 17       	cp	r18, r24
 a40:	39 07       	cpc	r19, r25
 a42:	69 f4       	brne	.+26     	; 0xa5e <free+0x10c>
 a44:	30 97       	sbiw	r30, 0x00	; 0
 a46:	29 f4       	brne	.+10     	; 0xa52 <free+0x100>
 a48:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <__flp+0x1>
 a4c:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__flp>
 a50:	02 c0       	rjmp	.+4      	; 0xa56 <free+0x104>
 a52:	13 82       	std	Z+3, r1	; 0x03
 a54:	12 82       	std	Z+2, r1	; 0x02
 a56:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <__brkval+0x1>
 a5a:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <__brkval>
 a5e:	df 91       	pop	r29
 a60:	cf 91       	pop	r28
 a62:	08 95       	ret

00000a64 <strnlen_P>:
 a64:	fc 01       	movw	r30, r24
 a66:	05 90       	lpm	r0, Z+
 a68:	61 50       	subi	r22, 0x01	; 1
 a6a:	70 40       	sbci	r23, 0x00	; 0
 a6c:	01 10       	cpse	r0, r1
 a6e:	d8 f7       	brcc	.-10     	; 0xa66 <strnlen_P+0x2>
 a70:	80 95       	com	r24
 a72:	90 95       	com	r25
 a74:	8e 0f       	add	r24, r30
 a76:	9f 1f       	adc	r25, r31
 a78:	08 95       	ret

00000a7a <memset>:
 a7a:	dc 01       	movw	r26, r24
 a7c:	01 c0       	rjmp	.+2      	; 0xa80 <memset+0x6>
 a7e:	6d 93       	st	X+, r22
 a80:	41 50       	subi	r20, 0x01	; 1
 a82:	50 40       	sbci	r21, 0x00	; 0
 a84:	e0 f7       	brcc	.-8      	; 0xa7e <memset+0x4>
 a86:	08 95       	ret

00000a88 <strnlen>:
 a88:	fc 01       	movw	r30, r24
 a8a:	61 50       	subi	r22, 0x01	; 1
 a8c:	70 40       	sbci	r23, 0x00	; 0
 a8e:	01 90       	ld	r0, Z+
 a90:	01 10       	cpse	r0, r1
 a92:	d8 f7       	brcc	.-10     	; 0xa8a <strnlen+0x2>
 a94:	80 95       	com	r24
 a96:	90 95       	com	r25
 a98:	8e 0f       	add	r24, r30
 a9a:	9f 1f       	adc	r25, r31
 a9c:	08 95       	ret

00000a9e <strrev>:
 a9e:	dc 01       	movw	r26, r24
 aa0:	fc 01       	movw	r30, r24
 aa2:	67 2f       	mov	r22, r23
 aa4:	71 91       	ld	r23, Z+
 aa6:	77 23       	and	r23, r23
 aa8:	e1 f7       	brne	.-8      	; 0xaa2 <strrev+0x4>
 aaa:	32 97       	sbiw	r30, 0x02	; 2
 aac:	04 c0       	rjmp	.+8      	; 0xab6 <strrev+0x18>
 aae:	7c 91       	ld	r23, X
 ab0:	6d 93       	st	X+, r22
 ab2:	70 83       	st	Z, r23
 ab4:	62 91       	ld	r22, -Z
 ab6:	ae 17       	cp	r26, r30
 ab8:	bf 07       	cpc	r27, r31
 aba:	c8 f3       	brcs	.-14     	; 0xaae <strrev+0x10>
 abc:	08 95       	ret

00000abe <fputc>:
 abe:	0f 93       	push	r16
 ac0:	1f 93       	push	r17
 ac2:	cf 93       	push	r28
 ac4:	df 93       	push	r29
 ac6:	fb 01       	movw	r30, r22
 ac8:	23 81       	ldd	r18, Z+3	; 0x03
 aca:	21 fd       	sbrc	r18, 1
 acc:	03 c0       	rjmp	.+6      	; 0xad4 <fputc+0x16>
 ace:	8f ef       	ldi	r24, 0xFF	; 255
 ad0:	9f ef       	ldi	r25, 0xFF	; 255
 ad2:	2c c0       	rjmp	.+88     	; 0xb2c <fputc+0x6e>
 ad4:	22 ff       	sbrs	r18, 2
 ad6:	16 c0       	rjmp	.+44     	; 0xb04 <fputc+0x46>
 ad8:	46 81       	ldd	r20, Z+6	; 0x06
 ada:	57 81       	ldd	r21, Z+7	; 0x07
 adc:	24 81       	ldd	r18, Z+4	; 0x04
 ade:	35 81       	ldd	r19, Z+5	; 0x05
 ae0:	42 17       	cp	r20, r18
 ae2:	53 07       	cpc	r21, r19
 ae4:	44 f4       	brge	.+16     	; 0xaf6 <fputc+0x38>
 ae6:	a0 81       	ld	r26, Z
 ae8:	b1 81       	ldd	r27, Z+1	; 0x01
 aea:	9d 01       	movw	r18, r26
 aec:	2f 5f       	subi	r18, 0xFF	; 255
 aee:	3f 4f       	sbci	r19, 0xFF	; 255
 af0:	31 83       	std	Z+1, r19	; 0x01
 af2:	20 83       	st	Z, r18
 af4:	8c 93       	st	X, r24
 af6:	26 81       	ldd	r18, Z+6	; 0x06
 af8:	37 81       	ldd	r19, Z+7	; 0x07
 afa:	2f 5f       	subi	r18, 0xFF	; 255
 afc:	3f 4f       	sbci	r19, 0xFF	; 255
 afe:	37 83       	std	Z+7, r19	; 0x07
 b00:	26 83       	std	Z+6, r18	; 0x06
 b02:	14 c0       	rjmp	.+40     	; 0xb2c <fputc+0x6e>
 b04:	8b 01       	movw	r16, r22
 b06:	ec 01       	movw	r28, r24
 b08:	fb 01       	movw	r30, r22
 b0a:	00 84       	ldd	r0, Z+8	; 0x08
 b0c:	f1 85       	ldd	r31, Z+9	; 0x09
 b0e:	e0 2d       	mov	r30, r0
 b10:	09 95       	icall
 b12:	89 2b       	or	r24, r25
 b14:	e1 f6       	brne	.-72     	; 0xace <fputc+0x10>
 b16:	d8 01       	movw	r26, r16
 b18:	16 96       	adiw	r26, 0x06	; 6
 b1a:	8d 91       	ld	r24, X+
 b1c:	9c 91       	ld	r25, X
 b1e:	17 97       	sbiw	r26, 0x07	; 7
 b20:	01 96       	adiw	r24, 0x01	; 1
 b22:	17 96       	adiw	r26, 0x07	; 7
 b24:	9c 93       	st	X, r25
 b26:	8e 93       	st	-X, r24
 b28:	16 97       	sbiw	r26, 0x06	; 6
 b2a:	ce 01       	movw	r24, r28
 b2c:	df 91       	pop	r29
 b2e:	cf 91       	pop	r28
 b30:	1f 91       	pop	r17
 b32:	0f 91       	pop	r16
 b34:	08 95       	ret

00000b36 <__ultoa_invert>:
 b36:	fa 01       	movw	r30, r20
 b38:	aa 27       	eor	r26, r26
 b3a:	28 30       	cpi	r18, 0x08	; 8
 b3c:	51 f1       	breq	.+84     	; 0xb92 <__ultoa_invert+0x5c>
 b3e:	20 31       	cpi	r18, 0x10	; 16
 b40:	81 f1       	breq	.+96     	; 0xba2 <__ultoa_invert+0x6c>
 b42:	e8 94       	clt
 b44:	6f 93       	push	r22
 b46:	6e 7f       	andi	r22, 0xFE	; 254
 b48:	6e 5f       	subi	r22, 0xFE	; 254
 b4a:	7f 4f       	sbci	r23, 0xFF	; 255
 b4c:	8f 4f       	sbci	r24, 0xFF	; 255
 b4e:	9f 4f       	sbci	r25, 0xFF	; 255
 b50:	af 4f       	sbci	r26, 0xFF	; 255
 b52:	b1 e0       	ldi	r27, 0x01	; 1
 b54:	3e d0       	rcall	.+124    	; 0xbd2 <__ultoa_invert+0x9c>
 b56:	b4 e0       	ldi	r27, 0x04	; 4
 b58:	3c d0       	rcall	.+120    	; 0xbd2 <__ultoa_invert+0x9c>
 b5a:	67 0f       	add	r22, r23
 b5c:	78 1f       	adc	r23, r24
 b5e:	89 1f       	adc	r24, r25
 b60:	9a 1f       	adc	r25, r26
 b62:	a1 1d       	adc	r26, r1
 b64:	68 0f       	add	r22, r24
 b66:	79 1f       	adc	r23, r25
 b68:	8a 1f       	adc	r24, r26
 b6a:	91 1d       	adc	r25, r1
 b6c:	a1 1d       	adc	r26, r1
 b6e:	6a 0f       	add	r22, r26
 b70:	71 1d       	adc	r23, r1
 b72:	81 1d       	adc	r24, r1
 b74:	91 1d       	adc	r25, r1
 b76:	a1 1d       	adc	r26, r1
 b78:	20 d0       	rcall	.+64     	; 0xbba <__ultoa_invert+0x84>
 b7a:	09 f4       	brne	.+2      	; 0xb7e <__ultoa_invert+0x48>
 b7c:	68 94       	set
 b7e:	3f 91       	pop	r19
 b80:	2a e0       	ldi	r18, 0x0A	; 10
 b82:	26 9f       	mul	r18, r22
 b84:	11 24       	eor	r1, r1
 b86:	30 19       	sub	r19, r0
 b88:	30 5d       	subi	r19, 0xD0	; 208
 b8a:	31 93       	st	Z+, r19
 b8c:	de f6       	brtc	.-74     	; 0xb44 <__ultoa_invert+0xe>
 b8e:	cf 01       	movw	r24, r30
 b90:	08 95       	ret
 b92:	46 2f       	mov	r20, r22
 b94:	47 70       	andi	r20, 0x07	; 7
 b96:	40 5d       	subi	r20, 0xD0	; 208
 b98:	41 93       	st	Z+, r20
 b9a:	b3 e0       	ldi	r27, 0x03	; 3
 b9c:	0f d0       	rcall	.+30     	; 0xbbc <__ultoa_invert+0x86>
 b9e:	c9 f7       	brne	.-14     	; 0xb92 <__ultoa_invert+0x5c>
 ba0:	f6 cf       	rjmp	.-20     	; 0xb8e <__ultoa_invert+0x58>
 ba2:	46 2f       	mov	r20, r22
 ba4:	4f 70       	andi	r20, 0x0F	; 15
 ba6:	40 5d       	subi	r20, 0xD0	; 208
 ba8:	4a 33       	cpi	r20, 0x3A	; 58
 baa:	18 f0       	brcs	.+6      	; 0xbb2 <__ultoa_invert+0x7c>
 bac:	49 5d       	subi	r20, 0xD9	; 217
 bae:	31 fd       	sbrc	r19, 1
 bb0:	40 52       	subi	r20, 0x20	; 32
 bb2:	41 93       	st	Z+, r20
 bb4:	02 d0       	rcall	.+4      	; 0xbba <__ultoa_invert+0x84>
 bb6:	a9 f7       	brne	.-22     	; 0xba2 <__ultoa_invert+0x6c>
 bb8:	ea cf       	rjmp	.-44     	; 0xb8e <__ultoa_invert+0x58>
 bba:	b4 e0       	ldi	r27, 0x04	; 4
 bbc:	a6 95       	lsr	r26
 bbe:	97 95       	ror	r25
 bc0:	87 95       	ror	r24
 bc2:	77 95       	ror	r23
 bc4:	67 95       	ror	r22
 bc6:	ba 95       	dec	r27
 bc8:	c9 f7       	brne	.-14     	; 0xbbc <__ultoa_invert+0x86>
 bca:	00 97       	sbiw	r24, 0x00	; 0
 bcc:	61 05       	cpc	r22, r1
 bce:	71 05       	cpc	r23, r1
 bd0:	08 95       	ret
 bd2:	9b 01       	movw	r18, r22
 bd4:	ac 01       	movw	r20, r24
 bd6:	0a 2e       	mov	r0, r26
 bd8:	06 94       	lsr	r0
 bda:	57 95       	ror	r21
 bdc:	47 95       	ror	r20
 bde:	37 95       	ror	r19
 be0:	27 95       	ror	r18
 be2:	ba 95       	dec	r27
 be4:	c9 f7       	brne	.-14     	; 0xbd8 <__ultoa_invert+0xa2>
 be6:	62 0f       	add	r22, r18
 be8:	73 1f       	adc	r23, r19
 bea:	84 1f       	adc	r24, r20
 bec:	95 1f       	adc	r25, r21
 bee:	a0 1d       	adc	r26, r0
 bf0:	08 95       	ret

00000bf2 <_exit>:
 bf2:	f8 94       	cli

00000bf4 <__stop_program>:
 bf4:	ff cf       	rjmp	.-2      	; 0xbf4 <__stop_program>
